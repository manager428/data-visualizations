{"version":3,"sources":["vendor/ember-cli/app-prefix.js","dummy/app.js","dummy/components/app-version.js","dummy/components/column-chart/component.js","dummy/components/ember-tether.js","dummy/controllers/application.js","dummy/controllers/array.js","dummy/controllers/object.js","dummy/helpers/pluralize.js","dummy/helpers/singularize.js","dummy/initializers/app-version.js","dummy/initializers/container-debug-adapter.js","dummy/initializers/data-adapter.js","dummy/initializers/ember-data.js","dummy/initializers/export-application-global.js","dummy/initializers/injectStore.js","dummy/initializers/store.js","dummy/initializers/transforms.js","dummy/instance-initializers/ember-data.js","dummy/resolver.js","dummy/router.js","dummy/services/ajax.js","dummy/templates/application.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-config.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n\n/* jshint ignore:start */\n\n\n\n/* jshint ignore:end */\n","define('dummy/app', ['exports', 'ember', 'dummy/resolver', 'ember-load-initializers', 'dummy/config/environment'], function (exports, _ember, _dummyResolver, _emberLoadInitializers, _dummyConfigEnvironment) {\n\n  var App = undefined;\n\n  _ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = _ember['default'].Application.extend({\n    modulePrefix: _dummyConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _dummyConfigEnvironment['default'].podModulePrefix,\n    Resolver: _dummyResolver['default']\n  });\n\n  (0, _emberLoadInitializers['default'])(App, _dummyConfigEnvironment['default'].modulePrefix);\n\n  exports['default'] = App;\n});","define('dummy/components/app-version', ['exports', 'ember-cli-app-version/components/app-version', 'dummy/config/environment'], function (exports, _emberCliAppVersionComponentsAppVersion, _dummyConfigEnvironment) {\n\n  var name = _dummyConfigEnvironment['default'].APP.name;\n  var version = _dummyConfigEnvironment['default'].APP.version;\n\n  exports['default'] = _emberCliAppVersionComponentsAppVersion['default'].extend({\n    version: version,\n    name: name\n  });\n});","define('dummy/components/column-chart/component', ['exports', 'ember-data-visualizations/components/column-chart/component'], function (exports, _emberDataVisualizationsComponentsColumnChartComponent) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberDataVisualizationsComponentsColumnChartComponent['default'];\n    }\n  });\n});","define('dummy/components/ember-tether', ['exports', 'ember-tether/components/ember-tether'], function (exports, _emberTetherComponentsEmberTether) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberTetherComponentsEmberTether['default'];\n    }\n  });\n});","define('dummy/controllers/application', ['exports', 'ember'], function (exports, _ember) {\n    exports['default'] = _ember['default'].Controller.extend({\n        metrics: [{ value: 'sighting', label: 'Sightings' }],\n\n        dimensions: [],\n        domainString: '',\n        groups: [],\n        colors: ['#B9B9B9', '#A0C0CF', '#105470'],\n        xAxis: {\n            domain: [moment(\"10/31/2016\"), moment(\"12/03/2016\")],\n            ticks: 5\n        },\n        yAxis: {\n            ticks: 3\n        },\n\n        series: [{ title: 'Skilled Answered Calls', hatch: 'pos' }, { title: 'Answered Calls', hatch: 'neg' }, { title: 'Offered Calls', hatch: false }],\n\n        onClick: function onClick(datum) {\n            this.set('domainString', datum.x);\n        },\n\n        /**\n         * @method _createDimensions\n         * Create the defined dimensions from the controller.\n         * @return {void}\n         * @private\n         */\n        _createDimensions: function _createDimensions() {\n            var content = _ember['default'].get(this, 'content');\n\n            content.forEach(function (d) {\n                d.date = moment(d.date, 'YYYYMMDD').toDate();\n            });\n\n            this._crossfilter = crossfilter(content);\n\n            this.set('dimensions', this._crossfilter.dimension(function (d) {\n                return d.date;\n            }));\n        },\n\n        /**\n         * @method _createGroups\n         * Create the defined groups from the controller.\n         * @return {void}\n         * @private\n         */\n        _createGroups: function _createGroups() {\n            var groups = [];\n            var dim = this.get('dimensions');\n\n            var createAddDataFunc = function createAddDataFunc(key) {\n                return function () {\n                    var grouping = dim.group().reduceSum(function (d) {\n                        return d[key];\n                    });\n                    groups.push(grouping);\n                };\n            };\n\n            createAddDataFunc('calls')();\n            createAddDataFunc('chats')();\n            createAddDataFunc('emails')();\n\n            this.set('groups', groups);\n\n            // Ember.run.later(this, (function() {\n            //     var groups = [];\n            //     var dim = this.get('dimensions');\n\n            //     var createAddDataFunc = function(key) {\n            //         return function() {\n            //             var grouping = dim.group().reduceSum(function (d) {\n            //                 return d[key] * 2;\n            //             });\n            //             groups.push(grouping);\n            //         };\n            //     };\n\n            //     createAddDataFunc('calls')();\n            //     createAddDataFunc('chats')();\n            //     createAddDataFunc('emails')();\n\n            //     this.set('groups', groups);\n\n            //     Ember.run.later(this, (function() {\n            //       var groups = [];\n            //       var dim = this.get('dimensions');\n\n            //       var createAddDataFunc = function(key) {\n            //           return function() {\n            //               var grouping = dim.group().reduceSum(function (d) {\n            //                   return d[key] * 3;\n            //               });\n            //               groups.push(grouping);\n            //           };\n            //       };\n\n            //       createAddDataFunc('calls')();\n            //       createAddDataFunc('chats')();\n            //       createAddDataFunc('emails')();\n\n            //       this.set('groups', groups);\n\n            //       Ember.run.later(this, (function() {\n            //         var groups = [];\n            //         var dim = this.get('dimensions');\n\n            //         var createAddDataFunc = function(key) {\n            //             return function() {\n            //                 var grouping = dim.group().reduceSum(function (d) {\n            //                     return d[key];\n            //                 });\n            //                 groups.push(grouping);\n            //             };\n            //         };\n\n            //         createAddDataFunc('calls')();\n            //         createAddDataFunc('chats')();\n            //         createAddDataFunc('emails')();\n\n            //         this.set('groups', groups);\n\n            //     }), 10000);\n\n            //   }), 10000);       \n\n            // }), 10000);\n        },\n\n        init: function init() {\n            // this.set('content', {});\n            var self = this;\n            d3.json(\"data.json\", function (error, json) {\n                if (error) {\n                    return console.log(error);\n                }\n                self.set('content', json);\n                self._createDimensions();\n                self._createGroups();\n            });\n\n            this.set('domainString', moment(\"10/31/2016\").toISOString() + ' - ' + moment(\"12/03/2016\").toISOString());\n        }\n    });\n});\n/* global moment, d3, crossfilter */","define('dummy/controllers/array', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Controller;\n});","define('dummy/controllers/object', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = _ember['default'].Controller;\n});","define('dummy/helpers/pluralize', ['exports', 'ember-inflector/lib/helpers/pluralize'], function (exports, _emberInflectorLibHelpersPluralize) {\n  exports['default'] = _emberInflectorLibHelpersPluralize['default'];\n});","define('dummy/helpers/singularize', ['exports', 'ember-inflector/lib/helpers/singularize'], function (exports, _emberInflectorLibHelpersSingularize) {\n  exports['default'] = _emberInflectorLibHelpersSingularize['default'];\n});","define('dummy/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'dummy/config/environment'], function (exports, _emberCliAppVersionInitializerFactory, _dummyConfigEnvironment) {\n  exports['default'] = {\n    name: 'App Version',\n    initialize: (0, _emberCliAppVersionInitializerFactory['default'])(_dummyConfigEnvironment['default'].APP.name, _dummyConfigEnvironment['default'].APP.version)\n  };\n});","define('dummy/initializers/container-debug-adapter', ['exports', 'ember-resolver/container-debug-adapter'], function (exports, _emberResolverContainerDebugAdapter) {\n  exports['default'] = {\n    name: 'container-debug-adapter',\n\n    initialize: function initialize() {\n      var app = arguments[1] || arguments[0];\n\n      app.register('container-debug-adapter:main', _emberResolverContainerDebugAdapter['default']);\n      app.inject('container-debug-adapter:main', 'namespace', 'application:main');\n    }\n  };\n});","define('dummy/initializers/data-adapter', ['exports', 'ember'], function (exports, _ember) {\n\n  /*\n    This initializer is here to keep backwards compatibility with code depending\n    on the `data-adapter` initializer (before Ember Data was an addon).\n  \n    Should be removed for Ember Data 3.x\n  */\n\n  exports['default'] = {\n    name: 'data-adapter',\n    before: 'store',\n    initialize: _ember['default'].K\n  };\n});","define('dummy/initializers/ember-data', ['exports', 'ember-data/setup-container', 'ember-data/-private/core'], function (exports, _emberDataSetupContainer, _emberDataPrivateCore) {\n\n  /*\n  \n    This code initializes Ember-Data onto an Ember application.\n  \n    If an Ember.js developer defines a subclass of DS.Store on their application,\n    as `App.StoreService` (or via a module system that resolves to `service:store`)\n    this code will automatically instantiate it and make it available on the\n    router.\n  \n    Additionally, after an application's controllers have been injected, they will\n    each have the store made available to them.\n  \n    For example, imagine an Ember.js application with the following classes:\n  \n    App.StoreService = DS.Store.extend({\n      adapter: 'custom'\n    });\n  \n    App.PostsController = Ember.Controller.extend({\n      // ...\n    });\n  \n    When the application is initialized, `App.ApplicationStore` will automatically be\n    instantiated, and the instance of `App.PostsController` will have its `store`\n    property set to that instance.\n  \n    Note that this code will only be run if the `ember-application` package is\n    loaded. If Ember Data is being used in an environment other than a\n    typical application (e.g., node.js where only `ember-runtime` is available),\n    this code will be ignored.\n  */\n\n  exports['default'] = {\n    name: 'ember-data',\n    initialize: _emberDataSetupContainer['default']\n  };\n});","define('dummy/initializers/export-application-global', ['exports', 'ember', 'dummy/config/environment'], function (exports, _ember, _dummyConfigEnvironment) {\n  exports.initialize = initialize;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (_dummyConfigEnvironment['default'].exportApplicationGlobal !== false) {\n      var theGlobal;\n      if (typeof window !== 'undefined') {\n        theGlobal = window;\n      } else if (typeof global !== 'undefined') {\n        theGlobal = global;\n      } else if (typeof self !== 'undefined') {\n        theGlobal = self;\n      } else {\n        // no reasonable global, just bail\n        return;\n      }\n\n      var value = _dummyConfigEnvironment['default'].exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = _ember['default'].String.classify(_dummyConfigEnvironment['default'].modulePrefix);\n      }\n\n      if (!theGlobal[globalName]) {\n        theGlobal[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete theGlobal[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n});","define('dummy/initializers/injectStore', ['exports', 'ember'], function (exports, _ember) {\n\n  /*\n    This initializer is here to keep backwards compatibility with code depending\n    on the `injectStore` initializer (before Ember Data was an addon).\n  \n    Should be removed for Ember Data 3.x\n  */\n\n  exports['default'] = {\n    name: 'injectStore',\n    before: 'store',\n    initialize: _ember['default'].K\n  };\n});","define('dummy/initializers/store', ['exports', 'ember'], function (exports, _ember) {\n\n  /*\n    This initializer is here to keep backwards compatibility with code depending\n    on the `store` initializer (before Ember Data was an addon).\n  \n    Should be removed for Ember Data 3.x\n  */\n\n  exports['default'] = {\n    name: 'store',\n    after: 'ember-data',\n    initialize: _ember['default'].K\n  };\n});","define('dummy/initializers/transforms', ['exports', 'ember'], function (exports, _ember) {\n\n  /*\n    This initializer is here to keep backwards compatibility with code depending\n    on the `transforms` initializer (before Ember Data was an addon).\n  \n    Should be removed for Ember Data 3.x\n  */\n\n  exports['default'] = {\n    name: 'transforms',\n    before: 'store',\n    initialize: _ember['default'].K\n  };\n});","define(\"dummy/instance-initializers/ember-data\", [\"exports\", \"ember-data/-private/instance-initializers/initialize-store-service\"], function (exports, _emberDataPrivateInstanceInitializersInitializeStoreService) {\n  exports[\"default\"] = {\n    name: \"ember-data\",\n    initialize: _emberDataPrivateInstanceInitializersInitializeStoreService[\"default\"]\n  };\n});","define('dummy/resolver', ['exports', 'ember-resolver'], function (exports, _emberResolver) {\n  exports['default'] = _emberResolver['default'];\n});","define('dummy/router', ['exports', 'ember', 'dummy/config/environment'], function (exports, _ember, _dummyConfigEnvironment) {\n\n  var Router = _ember['default'].Router.extend({\n    location: _dummyConfigEnvironment['default'].locationType\n  });\n\n  Router.map(function () {});\n\n  exports['default'] = Router;\n});","define('dummy/services/ajax', ['exports', 'ember-ajax/services/ajax'], function (exports, _emberAjaxServicesAjax) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberAjaxServicesAjax['default'];\n    }\n  });\n});","define(\"dummy/templates/application\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    return {\n      meta: {\n        \"fragmentReason\": {\n          \"name\": \"missing-wrapper\",\n          \"problems\": [\"wrong-type\", \"multiple-nodes\"]\n        },\n        \"revision\": \"Ember@2.4.6\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 19,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"dummy/templates/application.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(3);\n        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n        morphs[1] = dom.createMorphAt(fragment, 2, 2, contextualElement);\n        morphs[2] = dom.createMorphAt(fragment, 4, 4, contextualElement);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [[\"content\", \"domainString\", [\"loc\", [null, [1, 0], [1, 16]]]], [\"inline\", \"column-chart\", [], [\"dimension\", [\"subexpr\", \"@mut\", [[\"get\", \"dimensions\", [\"loc\", [null, [4, 14], [4, 24]]]]], [], []], \"group\", [\"subexpr\", \"@mut\", [[\"get\", \"groups\", [\"loc\", [null, [5, 10], [5, 16]]]]], [], []], \"seriesData\", [\"subexpr\", \"@mut\", [[\"get\", \"content\", [\"loc\", [null, [6, 15], [6, 22]]]]], [], []], \"type\", \"LAYERED\", \"seriesMaxMin\", 2, \"showMaxMin\", true, \"series\", [\"subexpr\", \"@mut\", [[\"get\", \"series\", [\"loc\", [null, [10, 11], [10, 17]]]]], [], []], \"colors\", [\"subexpr\", \"@mut\", [[\"get\", \"colors\", [\"loc\", [null, [11, 11], [11, 17]]]]], [], []], \"height\", 200, \"xAxis\", [\"subexpr\", \"@mut\", [[\"get\", \"xAxis\", [\"loc\", [null, [13, 10], [13, 15]]]]], [], []], \"yAxis\", [\"subexpr\", \"@mut\", [[\"get\", \"yAxis\", [\"loc\", [null, [14, 10], [14, 15]]]]], [], []], \"onClick\", [\"subexpr\", \"action\", [[\"get\", \"onClick\", [\"loc\", [null, [15, 20], [15, 27]]]]], [], [\"loc\", [null, [15, 12], [15, 28]]]]], [\"loc\", [null, [3, 0], [16, 2]]]], [\"content\", \"outlet\", [\"loc\", [null, [18, 0], [18, 10]]]]],\n      locals: [],\n      templates: []\n    };\n  })());\n});","/* jshint ignore:start */\n\n\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('dummy/config/environment', ['ember'], function(Ember) {\n  var prefix = 'dummy';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = Ember['default'].$('meta[name=\"' + metaName + '\"]').attr('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  return { 'default': config };\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\nif (!runningTests) {\n  require(\"dummy/app\")[\"default\"].create({\"name\":\"ember-data-visualizations\",\"version\":\"0.0.1+6b33ce8c\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClJA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;;ACDA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;;ACJA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"dummy.js"}